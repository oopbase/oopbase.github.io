<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>F Sharp on oopbase</title>
    <link>http://oopbase.de/tags/f-sharp/</link>
    <description>Recent content in F Sharp on oopbase</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>de-de</language>
    <lastBuildDate>Wed, 01 Feb 2017 00:00:00 +0200</lastBuildDate>
    
	<atom:link href="http://oopbase.de/tags/f-sharp/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Der F-Sharp JSON Type Provider</title>
      <link>http://oopbase.de/posts/der-f-sharp-json-type-provider/</link>
      <pubDate>Wed, 01 Feb 2017 00:00:00 +0200</pubDate>
      
      <guid>http://oopbase.de/posts/der-f-sharp-json-type-provider/</guid>
      <description>Im Laufe seiner Karriere befasst sich jeder Softwareentwickler früher oder später mit der Verarbeitung von JSON- oder XML-Dateien. Das Vorgehen ist dabei immer sehr ähnlich: Man analysiert die Struktur des zu verarbeitenden Dokuments, legt sich passende Model-Klassen an und überführt dann die Daten in die konkreten Objekte.
In diesem Artikel möchte ich zeigen, wie man mit dem F# JSON Type Provider die REST-Schnittstelle von dem IT-Magazin Golem konsumieren kann und warum die Verarbeitung der Daten mit F# so komfortabel ist.</description>
    </item>
    
    <item>
      <title>Implementing Pong in a functional manner with Fable</title>
      <link>http://oopbase.de/posts/implementing-pong-in-a-functional-manner-with-fable/</link>
      <pubDate>Mon, 26 Dec 2016 00:00:00 +0200</pubDate>
      
      <guid>http://oopbase.de/posts/implementing-pong-in-a-functional-manner-with-fable/</guid>
      <description>This post is part of the F# Advent Calendar in English 2016. Please check out the other posts as well.
 For the last few weeks I’ve been playing around with Fable. As a F# enthusiast who had to deal with a lot of JavaScript code during his studies, I was quite curious what Fable was all about. For those of you who don’t know what Fable is, here is a quote from their website: &amp;gt; Fable brings together the power of the F# compiler and Babel to make JavaScript a true backend for F#.</description>
    </item>
    
  </channel>
</rss>
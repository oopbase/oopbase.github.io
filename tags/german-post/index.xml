<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>German Post on oopbase</title>
    <link>http://oopbase.de/tags/german-post/</link>
    <description>Recent content in German Post on oopbase</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>de-de</language>
    <lastBuildDate>Mon, 22 May 2017 00:00:00 +0200</lastBuildDate>
    
	<atom:link href="http://oopbase.de/tags/german-post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>oopbase auf GitHub Pages</title>
      <link>http://oopbase.de/posts/oopbase-auf-github-pages/</link>
      <pubDate>Mon, 22 May 2017 00:00:00 +0200</pubDate>
      
      <guid>http://oopbase.de/posts/oopbase-auf-github-pages/</guid>
      <description>Seit der Umstellung von WordPress auf Hugo l√§uft auf meinem vServer lediglich ein Apache HTTP Server. Es existiert keine Datenbank mehr, da Hugo statischen Inhalt generiert. Nun ist die √úberlegung durchaus berechtigt, ob man einen kompletten vServer zum Hosten einer statischen Webseite ben√∂tigt üòâ. W√§hrend des Studiums gab es genug Anwendungsf√§lle, wof√ºr ein vServer tats√§chlich ganz nett war. Nun bin ich aber zu dem Entschluss gekommen, meinen vServer zu k√ºndigen und meinen Blog woanders zu Hosten.</description>
    </item>
    
    <item>
      <title>Auf interne Typen und Member von au√üen zugreifen</title>
      <link>http://oopbase.de/posts/auf-interne-typen-und-member-von-au%C3%9Fen-zugreifen/</link>
      <pubDate>Mon, 27 Mar 2017 00:00:00 +0200</pubDate>
      
      <guid>http://oopbase.de/posts/auf-interne-typen-und-member-von-au%C3%9Fen-zugreifen/</guid>
      <description>Durch das internal-Schl√ºsselwort kann auf so deklarierte Typen und Member nur von Dateien aus der selben Assembly zugegriffen werden. Wenn man nun aber Unit-Tests f√ºr diese Typen und Member schreiben m√∂chte, befindet man sich h√§ufig in einem separaten Testprojekt. Dadurch fehlt die notwendige Zugriffsberechtigung und die zu testende Funktionalit√§t muss ggf. weiter gekapselt werden.
Abhilfe schafft dabei das InternalsVisibleTo-Attribut. Wenn wir also ein Projekt MeinProjekt haben und zus√§tzlich ein weiteres Projekt MeinProjekt.</description>
    </item>
    
    <item>
      <title>Der F-Sharp JSON Type Provider</title>
      <link>http://oopbase.de/posts/der-f-sharp-json-type-provider/</link>
      <pubDate>Wed, 01 Feb 2017 00:00:00 +0200</pubDate>
      
      <guid>http://oopbase.de/posts/der-f-sharp-json-type-provider/</guid>
      <description>Im Laufe seiner Karriere befasst sich jeder Softwareentwickler fr√ºher oder sp√§ter mit der Verarbeitung von JSON- oder XML-Dateien. Das Vorgehen ist dabei immer sehr √§hnlich: Man analysiert die Struktur des zu verarbeitenden Dokuments, legt sich passende Model-Klassen an und √ºberf√ºhrt dann die Daten in die konkreten Objekte.
In diesem Artikel m√∂chte ich zeigen, wie man mit dem F# JSON Type Provider die REST-Schnittstelle von dem IT-Magazin Golem konsumieren kann und warum die Verarbeitung der Daten mit F# so komfortabel ist.</description>
    </item>
    
  </channel>
</rss>